 CSS                   Cascading Style Sheets
                       (as the Styles are cascaded from the different sources)

 SYNTAX                 selector   { property : value ; ... }  <---- remember the ';' (optional only in case
                        ex:                           ^                            ^   of 1 only property)
                             h1 {color:blue; font-size:12px;}

 SELECTORS:
                   - element          p        { text-align: center; color: red; }
                   - id               #para1   { text-align: center; color: red; }
                   - class            .center  { text-align: center; color: red; }
                   - element & class  p.center { text-align: center; color: red; }

                   grouping with ','   h1, h2, p { text-align: center; color: red; }

                        - PSEUDO - classes   : are classes identified by a ':' after a selector
                                               ex a:hover
                                                  #id:hover
                                               They identify (select) elements on conditions
                                               not known at static time (ex. hover is when the
                                               mouse goes on the element)

                        - PSEUDO - elements    they select (with syntax '::') a sub-set of that element according
                                               to some sublogic (ex.  ::first-line or ::first-letter)

                   Order is important so a

                        div.data select.entryField { ....

                     will match any element of this type
                        <div class="data" ...
                            <.....
                                <.....
                                    <select class="entryField" ...

                   NB. this difference
                        div.data      <---- this will match any element like <div class="data"
                        div .data     <---- this will match any element like <div ...
                                                                               ....
                                                                               <...  class="data"

           CSS
          version
              1    E                         an element of type E
              1    E:link                    an E element being the source anchor of a hyperlink of which the target
                                             is not yet visited (:link) or already visited (:visited)
              1    E:active                  an E element during certain user actions
              1    E::first-line             the first formatted line of an E element
              1    E::first-letter           the first formatted letter of an E element
              1    .c                        all elements with class="c"
              1    #myid                     the element with id="myid"
              1    E.warning                 an E element whose class is "warning" (the document language specifies how class is determined)
              1    E#myid                    an E element with ID equal to "myid"
              1    E F                       an F element descendant of an E element
              2    *                         any element
              2    E[foo]                    an E element with a "foo" attribute
              2    E[foo="bar"]              an E element whose "foo" attribute value is exactly equal to "bar"
              2    E[foo~="bar"]             an E element whose "foo" attribute value is a list of whitespace-separated values,
                                             one of which is exactly equal to "bar"
              2    E[foo|="en"]              an E element whose "foo" attribute has a hyphen-separated list of
                                             values beginning (from the left) with "en"
              2    E:first-child             an E element, first child of its parent
              2    E:lang(fr)                an element of type E in language "fr" (the document language
                                             specifies how language is determined)
              2    E::before                 generated content before an E element's content
              2    E::after                  generated content after an E element's content
              2    E > F                     an F element child of an E element
              2    E + F                     an F element immediately preceded by an E element
              3    E[foo^="bar"]             an E element whose "foo" attribute value begins exactly with the string "bar"
              3    E[foo$="bar"]             an E element whose "foo" attribute value ends exactly with the string "bar"
              3    E[foo*="bar"]             an E element whose "foo" attribute value contains the substring "bar"
              3    E:root                    an E element, root of the document
              3    E:nth-child(n)            an E element, the n-th child of its parent
              3    E:nth-last-child(n)       an E element, the n-th child of its parent, counting from the last one
              3    E:nth-of-type(n)          an E element, the n-th sibling of its type
              3    E:nth-last-of-type(n)     an E element, the n-th sibling of its type, counting from the last one
              3    E:last-child              an E element, last child of its parent
              3    E:first-of-type           an E element, first sibling of its type
              3    E:last-of-type            an E element, last sibling of its type
              3    E:only-child              an E element, only child of its parent
              3    E:only-of-type            an E element, only sibling of its type
              3    E:empty                   an E element that has no children (including text nodes)
              3    E:target                  an E element being the target of the referring URI
              3    E:enabled                 a user interface element E that is enabled
              3    E:disabled                a user interface element E that is disabled
              3    E:checked                 a user interface element E that is checked (for instance a radio-button or checkbox)
              3    E:not(s)                  an E element that does not match simple selector s
              3    E ~ F                     an F element preceded by an E element


 COMMENT           /*  */

 ADDING CSS
                  External   <link rel="stylesheet" type="text/css" href="mystyle.css">  <--- in the <HEAD> section
                  Internal   <style> ..... </style>
                  Inline     with attribute style=
                              <h1 style="color:blue;margin-left:30px;">This is a heading.</h1>


 PRIORITY         The FINAL style applied to an ELEMENT depends by the CASCADE chain.
                  Each attribute if not defined directly, has the value, retrieved
                  by the following hierarchy (where 'browser default' is the lowest)


              1      Importance               The ‘!important’ annotation overwrites the previous priority types
              2      Inline                   A style applied to an HTML element via HTML ‘style’ attribute
              3      Media Type               A property definition applies to all media types, unless a media specific CSS is defined
              4      User defined             Most browsers have the accessibility feature: a user defined CSS
              5      Selector specificity     A specific contextual selector (#heading p) overwrites generic definition
              6      Rule order               Last rule declaration has a higher priority
              7      Parent inheritance       If a property is not specified, it is inherited from a parent element
              8      CSS property definition  CSS rule or CSS inline style overwrites a default browser value
                     in HTML document
              9      Browser default          The lowest priority: browser default value is determined
                                              by W3C initial value specifications

 SPECIFITY        Is a series of numbers separated by ',' (commas) used internally
                  to select which is the more SPECIFIC selector, when the same element
                  has two or more rules that apply.
                  Apart from this number, the final decision is the rule found as last
                  written in the Cascade chain.


 COLORS           can be declared in  different ways:

                      - with 1 of the ~ 140 predefined names (ex "red" "lightblue" "FireBrick" ...)
                      - hexadecimal values (e.g. #FF0000, also abbreviated as #F00),
                      - RGB values on a 0 to 255 scale (e.g. rgb(255, 0, 0)),
                      - RGBA values that specify both color and opacity (e.g. rgba(255, 0, 0, 0.8)),
                      - HSL or HSLA values (e.g. hsl(000, 100%, 50%), hsla(000, 100%, 50%, 80%)).[10]

 BACKGROUND       can be a colour (background-color: green
                  or an image     (background-image: url("paper.gif");

                  for any selected element ex.
                        div {
                            background-color: lightblue;
                            }


 BOX MODEL        ANY, any, really any element
                  lives in a geometry of including BOXEs:

                      ELEMENT = MARGIN - BORDER - PADDING - CONTENT    <--- nb. Margin is OUTSIDE Boder (Inside is Padding)

                  So the size of an ELEMENT is the SUM of all.
                  ex:
                  div {
                      width: 320px;                         ex ELEM. WIDTH =  320 +  10 + 10  + 5 + 5   + 2 + 2   = 354
                      padding: 10px;                                                 Padding    Border    Margin
                      border: 5px solid gray;
                      margin: 2;
                  }


 BORDERS

                                     | border-style:..
                                     |
                                     |     dotted
                                     |     dashed
                                     |     solid
                     STYLE           |     double        ex:
                                     |     groove            p.hidden {border-style: hidden;}
                                     |     ridge             p.mix {border-style: dotted dashed solid double;}
                                     |     inset
                                     |     outset
                                     |     none
                                     |     hidden
                                     |
                                     | it is possible to define the single side:

                                        border-top-style:
                                        border-right-style:
                                        border-bottom-style:
                                        border-left-style:

                                            ex:
                                                border-top-style:    dotted;
                                                border-right-style:  solid;
                                                border-bottom-style: dotted;
                                                border-left-style:   solid;

                       WIDTH         border-width: ..      ex. border-width: 5px;
                                                               border-width: medium;

                       COLOR         border-color: ..      ex. border-color: red;


 MARGINS          to generate the 4 spaces around borders.


                           margin-top:   ..             values ca be:   - auto
                           margin-right: ..                             - 50px, 50pt, 50cm, ...
                           margin-bottom:..                             - 50%
                           margin-left:  ..                             - inherit   (derived from parents)

                           margin: ..       (set all together)
                                          ex. margin: 100px 150px 100px 80px;
                                              margin: 25px 50px 75px;         Top   -   Left & Right   -  Bottom
                                              margin: 25px 50px;              T & B - L & R
                                              margin: 25px;                   all



                  Margin-Collapse:    is what can happen to ONLY vertical spaces (margins T & B)
                                      where the gap instead of B1+T2 can be only max of B1, T2
                                      ex.
                                      h1 { margin: 0 0 50px 0; }
                                      h2 { margin: 20px 0 0 0; }

                                           ...                                 ...
                                           50                                  50
                                      ______________________              ______________________
                                      ______________________                   ...
                                           20
                                           ...

                                     Not happen in a case                Happens in a case like this
                                     like this                             <h1>Heading 1</h1>
                                     <h1>Heading 1</h1>                    <h2>Heading 2</h2>
                                         bla bla bla
                                     <h2>Heading 2</h2>

 PADDING          The exact same as margins
                           padding-top: 50px;
                           padding-right: 30px;
                           padding-bottom: 50px;
                           padding-left: 80px;

                           padding                  padding: 25px 50px 75px 100px;
                                                    padding: 25px 50px 75px;
                                                    padding: 25px 50px;
                                                    padding: 25px;

 HEIGHT/WIDTH     Are the values of the CONTENT (The INNER only part of an ELEMENT)

                      - px, pt, cm, ...
                      - %

                  height: 200px;
                  width: 50%;

                  H/W never go below their value. If the broswer is shorter or dragged
                  to become shorter, H/W are still that, and the browser adds a scroll-bar

                  max-height=...
                  max-width=...  are used to manage this.
                                 value "none" by default. A value X
                                 means that it tries to be X, and if the browser gets shorter
                                 it shrinks to fit in the resulting size

                  The all family is:
                                     max-width:  ..
                                     max-height: ..
                                     min-height: ..
                                     min-width:  ..


 OUTLINE          It's a further EXTERNAL BOX (after The MARGINS) but it's not included in the
                  Element definition (BOX MODEL)
                  (so its size must not be related to the other dimensions)

                         outline          Sets all the outline properties in one declaration
                         outline-color    Sets the color of an outline
                         outline-offset   Specifies the space between an outline and the edge or border of an element
                         outline-style    Sets the style of an outline
                         outline-width    Sets the width of an outline


 TEXT
                  color              Sets the color of text
                  direction          Specifies the text direction/writing direction
                  letter-spacing     Increases or decreases the space between characters in a text
                  line-height        Sets the line height
                  text-align         Specifies the horizontal alignment of text
                  text-decoration    Specifies the decoration added to text
                  text-indent        Specifies the indentation of the first line in a text-block
                  text-shadow        Specifies the shadow effect added to text
                  text-transform     Controls the capitalization of text
                  unicode-bidi       Used together with the direction property to set or return
                                     whether the text should be overridden to support multiple languages in the same document
                  vertical-align     Sets the vertical alignment of an element
                  white-space        Specifies how white-space inside an element is handled
                  word-spacing       Increases or decreases the space between words in a text

 FONTS            .

 LINKS            .

 LISTS            .

 TABLES
                  border            Sets all the border properties in one declaration
                  border-collapse   Specifies whether or not table borders should be collapsed
                  border-spacing    Specifies the distance between the borders of adjacent cells
                  caption-side      Specifies the placement of a table caption
                  empty-cells       Specifies whether or not to display borders and background on empty cells in a table
                  table-layout      Sets the layout algorithm to be used for a table

 DISPLAY          Every Element has a default value for property 'display':
                  with values
                        block     (default for div, h1, ....h6, p, form, headrr, footer, section)
                        inline    (default for span a img)
                        none      (default for <script>. it used as a value by Javascript to show/hide elements)

                  block    takes the FULL width on a NEW line
                  inline   takes on the same line only the required width.


                  An inline element with display: block;
                  is not allowed to have other block elements inside it.

                  visibility:hidden | visible;               is another way to show/hide something
                                                             ANYHOW the element still occupy its space
                                                             even if not shown
                                                             (while display:none removes completely from the page)

 MAX-WIDTH        .

 POSITION         Specifies the type of positioning for an element

                                                 RELATIVE TO
                             ----------------------------------------------------------------------------------
                             static  (default)        -         elements are not positioned in any special way;
                                                                they result according to the normal flow of the page:
                                                                (top, bottom, left, and right  have no effect with 'static')

                             relative            ITS NORMAL     the elem. is positioned relative to its normal position.
                                                 POSITION       moving it according to the 4 (top, bottom, left, rigth)

                             fixed               BROWSER        Elem. is like in a layer over the page (overlay). When The page
                                                 VIEWPORT       is scrolled the Elem remains there
                                                                (fixed, means relative to the browser-window or 'viewport')

                             absolute            NEAREST        relative to the nearest positioned ancestor (instead of
                                                 ANCESTOR       positioned relative to the viewport, like fixed).
                                                                However; if an absolute positioned element has no positioned ancestors,
                                                                it uses the document body, and moves along with page scrolling.

                        ------ the following 4 works only if 'position' is set first

                                top         Sets the top margin edge for a positioned box
                                bottom      Sets the bottom margin edge for a positioned box
                                left        Sets the left margin edge for a positioned box
                                right       Sets the right margin edge for a positioned box

                        clip        Clips an absolutely positioned element
                        cursor      Specifies the type of cursor to be displayed
                        overflow    Specifies what happens if content overflows an element's box
                        overflow-x  Specifies what to do with the left/right edges of the content if it overflows the element's content area
                        overflow-y  Specifies what to do with the top/bottom edges of the content if it overflows the element's content area

                        ------  When elements are positioned, they can overlap
                                z-index      specifies the stack order of an element   (ex. -1 is behind text)

 OVERFLOW         .

 FLOAT            In its simplest use, the float property can be used to wrap text around images.
                  ex.
                      float: right;

                                    Elements after a floating element will flow around it.
                                    To avoid this, use the clear property.
                      clear: ...

                      The clear property specifies on which sides of an element floating elements are not allowed to float:
                      ex. clear: left;

 INLINE-BLOCK     .

 ALIGN            .

 COMBINATORS      .

 PSEUDO-CLASS     .

 PSEUDO-ELEMENT   .

 OPACITY          .

 NAVIGATION BAR   .

 DROPDOWNS        .

 TOOLTIPS         .

 IMAGE GALLERY    .

 IMAGE SPRITES    .

 ATTR SELECTORS   .

 FORMS            .

 COUNTERS         .













