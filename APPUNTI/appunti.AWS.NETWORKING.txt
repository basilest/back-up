-------------------------------------------------------------------------
aws --profile live ec2 describe-subnets            <---- output is JSON
-------------------------------------------------------------------------

                {
                    "Subnets": [
                        {
                            "AvailabilityZone": "eu-west-2a",
                            "AvailabilityZoneId": "euw2-az2",
                            "AvailableIpAddressCount": 221,
                            "CidrBlock": "10.55.1.0/24",
                            "DefaultForAz": false,
                            "MapPublicIpOnLaunch": false,
                            "State": "available",
                            "SubnetId": "subnet-00e641a436fba57a0",
                            "VpcId": "vpc-0aee7f05623f04ea3",
                            "OwnerId": "449229032822",
                            "AssignIpv6AddressOnCreation": false,
                            "Ipv6CidrBlockAssociationSet": [],
                            "Tags": [
                                {
                                    "Key": "Environment",
                                    "Value": "live"
                                },
                                {
                                    "Key": "Name",
                                    "Value": "live-mm-platform-routing-eu-west-2a"
                                },
                                {
                                    "Key": "Service",
                                    "Value": "mm-platform"
                                },
                                {
                                    "Key": "NetworkType",
                                    "Value": "private"
                                }
                            ],
                            "SubnetArn": "arn:aws:ec2:eu-west-2:449229032822:subnet/subnet-00e641a436fba57a0"
                        },
                        {
                            "AvailabilityZone": "eu-west-2c",
                            "AvailabilityZoneId": "euw2-az1",
                            "AvailableIpAddressCount": 246,
                            "CidrBlock": "10.56.4.0/24",
                            "DefaultForAz": false,
                            .........................

                            > 1000 lines
-------------------------------------------------------------------------
aws --profile live ec2 describe-subnets   --output text            <---- not JSON
-------------------------------------------------------------------------

                        SUBNETS	False	eu-west-2a	euw2-az2	221	10.55.1.0/24	False	False	449229032822	available	arn:aws:ec2:eu-west-2:449229032822:subnet/subnet-00e641a436fba57a0	subnet-00e641a436fba57a0	vpc-0aee7f05623f04ea3
                        TAGS	Environment	live
                        TAGS	Name	live-mm-platform-routing-eu-west-2a
                        TAGS	Service	mm-platform
                        TAGS	NetworkType	private
                        SUBNETS	False	eu-west-2c	euw2-az1	246	10.56.4.0/24	False	False	449229032822	available	arn:aws:ec2:eu-west-2:449229032822:subnet/subnet-031c5333749638f78	subnet-031c5333749638f78	vpc-0c986dfb48d8b5c7d






-------------------------------------------------------------------------
aws --profile live ec2 describe-subnets   --filters Name="n1",Value=v11,v12" --filters Name="n2",Value=v2"
-------------------------------------------------------------------------

                                          I can filter the output where
                                                    Name=     ,Value=     are aws keywords
                                                               v1,v2      are the values I'm after
                                                    n1/n2                 are reserverd keys from the documentation e.g.
                                                             'availability-zone'
                                                             'state'
                                                             '...'
      ex aws --profile live ec2 describe-subnets   --filters Name="state,Values="available"
      ex aws --profile live ec2 describe-subnets   --filters Name="state",Values="availale" --filters Name="availability-zone",Values="eu-west-2c"
      ex aws --profile live ec2 describe-subnets   --filters Name="availability-zone",Values="eu-west-2c,eu-west-2a,eu-west-2b"
-------------------------------------------------------------------------


1. VPC - Foudamentals

         VPC : Virual Private CLOUD

                    1. Sunbets
                    2. Route Tables
                    3. Endpoints
                    4. Gateways
                    5. Security Group    (ARE sessions aware)
                    6. Network ACLs      (NOT sessions aware)



         1. Sunbets
                      ex. us-east-1    <---- REGION

                                     .eu-west-1a
                                     .eu-west-1b    <---- AvailabilityZones: Anyone can fail
                                     .eu-west-1b                             without affecting
                                                                             the others
                       +------------------------------------------+
                       | .----------.  .----------.  .----------. |
                       | .          .  .          .  .          . |
                       | .eu-west-1a.  .eu-west-1b.  .eu-west-1c. |
                       | .          .  .          .  .          . |
                       | .__________.  .__________.  .__________. |
                       |                                          |
                       +---------------us-east-1------------------+




                       +------------------------------------------+
                       | .----------.  .----------.  .----------. |     Traffic sub-1 --> sub4
                       | .          .  .          .  .          . |     is intra-zone
         sub-1/2/3     | .eu-west-1a.  .eu-west-1b.  .eu-west-1c. |
          PUBLIC ------->. subnet-1 .  . subnet-2 .  . subnet-3 . |     Traffic sub-1 --> sub-2
          PRIVATE ------>. subnet-4 .  . subnet-5 .  .          . |     is between zones
         sub-4/5       | .__________.  .__________.  .__________. |
                       |                                          |
                       +---------------us-east-1------------------+




                       +------------------------------------------+
                       | .--------------------------------------. |
                       | .                                      . |
                       | .            V P C                     . |
                       | .   (overlys + availability zones)     . |
                       | .______________________________________. |
                       |                                          |
                       +---------------us-east-1------------------+




          VPC  IP  ADDRESSING
                               . IP  range /16  to /28
                               . RFC 1918
                                             10.0.0.0/8
                                            172.0.0.0/16
                                            192.0.0.0/16
                               . 5 reserved subnet addresses
                                   ^^^^^^^^
                                           +0    network
                                           +1    VPC router
                                           +2    DNS server
                                           +3    reserved by AWS for any future need
                                           +last (ex ...1111....) broadcast   (Note anyhow
                                                                               that AWS doesn'y



                       +----------VPC 10.0.0.0/16 ----------------+
                       | .--------------------------------------. |
                       | .                                      . |
                       | .10.0.1.0/24  10.0.2.0/24  10.0.3.0/24 . |
                       | .                                      . |    fig.3
                       | .10.0.4.0/24  10.0.5.0/24              . |
                       | .______________________________________. |
                       |                                          |
                       +---------------us-east-1------------------+

                          Note on VPC.
                            1. subnets IPs ranges(address space)CANNOT OVERLAP
                            2. CIDR cannot be CHANGED (/16) (I must delete the VPC and create it again)
                               (the CIDR range at creation is called PRIMARY)
                            3. I can ADD other CIDR ranges (ex. 10.0.0.0/8) (to be used as other subnets)
                               these must be of the same family ex. other 10. not 172. or 192.
                            4. added CIDR can be removed (but not the primary)

-------------------------------------------------------------------------
aws cloudformation create-stack --stack-name Globomantics --template-body file://basic-network.template
-------------------------------------------------------------------------
               it creates the network of fig.3

where basic-network.template is a JSON file like this:


{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Basic VPC deployment with two public subnets in two different Availability Zones",
    "Parameters": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Company",
                        "Value": "Globomantics"
                    },
                    {
                        "Key": "Name",
                        "Value": "globo-primary"
                    }
                ]
            }
        },
|       "PublicSubnet1": {                      |PublicSubnet2|PublicSubnet3|PrivateSubnet1 PrivateSubnet2
|           "Type": "AWS::EC2::Subnet",         |             |             |             |             |
|           "Properties": {                     |             |             |             |             |
|               "VpcId": {                      |             |             |             |             |
|                   "Ref": "VPC"                |             |             |             |             |
|               },                              |             |             |             |             |
|               "CidrBlock": "10.0.1.0/24",     |10.0.2.0/24  |10.0.3.0/24  |10.0.4.0/24  |10.0.5.0/24  |
|               "Tags": [                       |             |             |             |             |
|                   {                           |             |             |             |             |
|                       "Key": "Company",       |             |             |             |             |
|                       "Value": "Globomantics" |             |             |             |             |
|                   },                          |             |             |             |             |
|                   {                           |             |             |             |             |
|                       "Key": "Network",       |             |             |             |             |
|                       "Value": "Public"       |Public       |Public       |Private      |Private      |
|                   },                          |             |             |             |             |
|                   {                           |             |             |             |             |
|                       "Key": "Name",          |             |             |             |             |
|                       "Value": "subnet-1"     |subnet-2     |subnet-3     |subnet-4     |subnet-5     |
|                   }                           |             |             |             |             |
|               ],                              |             |             |             |             |
|               "AvailabilityZone": {           |             |             |             |             |
|                   "Fn::Select": [             |             |             |             |             |
|                       "0",                    |1            |2            |0            |1            |
|                       {                       |             |             |             |             |
|                           "Fn::GetAZs": ""    |             |             |             |             |
|                       }                       |             |             |             |             |
|                   ]                           |             |             |             |             |
|               }                               |             |             |             |             |
|           }                                   |             |             |             |             |
|       },                                      |             |             |             |             |
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Company",
                        "Value": "Globomantics"
                    }
                ]
            }
        },
        "GatewayToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Company",
                        "Value": "Globomantics"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "GatewayToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet3"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Company",
                        "Value": "Globomantics"
                    }
                ]
            }
        },
        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "InboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "PublicSubnetNetworkAclAssociation1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },
        "PublicSubnetNetworkAclAssociation2": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },
        "PublicSubnetNetworkAclAssociation3": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet3"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        }
    },
    "Outputs": {
        "VPCId": {
            "Description": "VPCId of the newly created VPC",
            "Value": {
                "Ref": "VPC"
            }
        }
    }

-------------------------------------------------------------------------
aws ec2 associate-vpc-cidr-block --cidr-block "10.1.0.0/24" --vpc-id $vpc_id
-------------------------------------------------------------------------
               it adds a CIDR "10.1.0.0/24" to a VPC whose id
               I can have as:

-------------------------------------------------------------------------
vpc_id=$(aws ec2 describe-vpcs --filters Name="tag:Name",Values="globo-primary" --query 'Vpcs[0].VpcId' --output text)
-------------------------------------------------------------------------



-------------------------------------------------------------------------
az=$(aws ec2 describe-subnets --filter Name="tag:Name",Values="subnet-3" --query 'Subnets[0].AvailabilityZoneId' --output text)
-------------------------------------------------------------------------
               it gets the AvailabilityZoneId
               I use this value when creating a new subnet-6:

-------------------------------------------------------------------------
subnet_6=$(aws ec2 create-subnet --availability-zone-id $az --cidr-block "10.1.0.0/24" --vpc-id $vpc_id)
-------------------------------------------------------------------------
               "ec2 create-subnet" doesn't allow to specify tags
               so if I want tags I must run
               "ec2 create-tags" specifying the subnet_id
               which I can get for example as

               subnet_6_id=$(echo $subnet_6 | jq .Subnet.SubnetId -r)


-------------------------------------------------------------------------
aws ec2 create-tags --resources $subnet_6_id \
                    --tags Key=Name,Value=subnet-6 Key=Company,Value=Globomantics Key=Network,Value=Private
-------------------------------------------------------------------------





























1. VPC - Foudamentals

         VPC : Virual Private CLOUD

                    An isolated  virtual network inside AWS.


                    I have full control for
                        - selection of my own IP address range,
                        - creation of subnets,
                        - configuration of route tables / network gateways.


