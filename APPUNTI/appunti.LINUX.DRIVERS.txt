   ftp://ftp.ora.com/pub/examples/linux/drivers/




   1. goto:   https://www.kernel.org/pub/linux/kernel/v3.0/

   2. downloaded : 
                 linux-3.18.9.tar.gz     07-Mar-2015 13:23  117M  

   3. make a clean dir: ~/kernel    + ~/kernel/build  

   4. unzip linux-3.18.9.tar.gz inside ~/kernel

   5. write this funct in .bashrc
             function kb {
                 mkdir -p ~/kernel/build/$(basename $(pwd))     if  pwd = /home/stiv/kernel  basename = kernel
                 echo     ~/kernel/build/$(basename $(pwd))
             }
   6. cd linux-3.18.9
      make distclean
      make defconfig O=`kb`
      make O=`kb`

   7. here the kernel image:   ~/kernel/linux-3.18.9/arch/x86/boot/bzImage
      the size is 5,6M 


















   Kernel:  2.6.10

   1/18  Introduction to Device Drivers
   ===========================================

  modularity:   each devide driver can be "plugged in” at runtime
  policy-free:  split into two parts: 
                   “what capabilities are to be provided” (the mechanism) : the driver
                   “how those capabilities can be used”   (the policy): un upper layer


       Process management:    - create / detrsy processes
                              - make them communicate: signals, pipes, or interprocess communication
                              - abstarct on 1 CPU, more processes

       Memory management:     - set of function calls, ranging from the simple malloc/free 
                                to much more comple

       Filesystems:           - everything is 1 file
                                multiple filesystem TYPES, different ways of organizing data
                                on the physical medium (formatted ext3, FAT, ...)

       Device control:        - The kernel must have embedded specific CODE for any device

       Networking:            - all the routing and address resolution issues are implemented within the kernel


  Loadable Modules:  can attach and unmount at RUNTIME (through a syscall 'init_module' which only supeuser can call
                                                        or techincally one who has 'CAP_SYS_MODULE')
                     A module is a piece of code
                     (not linked into a complete executable) that can be dynamically linked to the running kernel 
                     by the 
                                 insmod  (or better: modprobe)
                     program and can be unlinked by the 
                                 rmmod 
                     program.
                     To see the running module: lsmod

                     For SECURITY resons, it is:
                        - possible to compile the lernel itself with 'CLOSE' the possibility to load new modules
                        - disable loading of modules at runtime also for normal compiled kernel.


  3 Classes of Modules: 
                    Character devices:   a stream of bytes like a normal file:
                                         They implement at least the sys call: 
                                                    open, 
                                                    close, 
                                                    read, 
                                                    write
                                         The only diff respect a normal file, is that seldom there is
                                         something like a 'seek' (to go to and fro), but access is most
                                         ofetn sequentially.

                                                    examples: /dev/console   
                                                              /dev/ttyS0
                                                              /dev/lp0

                    Block devices:       Block drivers have a completely different interface TO THE KERNEL 
                                         than char drivers. But not to the user/application that sees them as a char device.
                                         Block devices can only handle I/O operations that transfer one or more whole 
                                         blockblocks, which are usually 512 bytes (or a larger).

                                                    they also stay in /dev

                    Network devices:    is in charge of sending and receiving data packets.
                                        Many network connections
                                        (especially those using TCP) are stream-oriented, but network devices are, usu-
                                        ally, designed around the transmission and receipt of packets. A network driver 
                                        knows nothing about individual connections; it only handles packets.

     ---------------------------------- Kernel numbers
     2.6.x   (the even versions) are STABLE
     2.7.x   (the odd  versions) NOT   (under development, they expire in some days)

   2/18  Building and Running Modules
   ===========================================
   linked to kernel obj: 2.6 modules are linked against object files found in the kernel source tree; 
                         the result is a more robust module loader, but also the requirement that those object file
                         are availble.

   Compiling the kernel: The build process for modules differs significantly from that used for user-space applications; 
                         the kernel is a large, standalone program with detailed and explicit requirements on how
                         its pieces are put together.
   
   
   
   
   
   
    ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   3/18  Char Drivers
   ===========================================


     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------


   4/18  Debugging Techniques
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   5/18  Concurrency and Race Conditions
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   6/18  Advanced Char Driver Operations
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   7/18  Time, Delays, and Deferred Work
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   8/18  Allocating Memory
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   9/18  Communicating with Hardware
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   10/18  Interrupt Handling
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   11/18  Data Types in the Kernel
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   12/18  PCI Drivers
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   13/18  USB Drivers
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   14/18  The Linux Device Model
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   15/18  Memory Mapping and DMA
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   16/18  Block Drivers
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   17/18  Network Drivers
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------



   18/18  TTY Drivers
   ===========================================

     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------
     ----------------------------------


