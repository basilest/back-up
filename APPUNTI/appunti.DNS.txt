-------------------------------
     DNS Troubleshoot
-------------------------------


1. Issue:                            ____________ my IP
                                    /
                                   /
                                  /
            ╭─ ↵ 1  49121   192.168.1.14  sbasile@pd11835   ~/TEST/PO/p     master  
            ╰─ nslookup mesos-master1.live.aws.internal
            Server:         192.168.1.1
            Address:        192.168.1.1#53   <----------------------------------------------------- Wifi router DNS !!!!!!!

            ** server can't find mesos-master1.live.aws.internal: NXDOMAIN


            ╭─ ↵ 1  49121   192.168.1.14  sbasile@pd11835   ~/TEST/PO/p     master  
            ╰─ ns private-api.companieshouse.gov.uk
            Server:         192.168.1.1
            Address:        192.168.1.1#53

            Non-authoritative answer:
            private-api.companieshouse.gov.uk       canonical name = internal-live-chs-apichgovuk-private-1586566722.eu-west-2.elb.amazonaws.com.
            Name:   internal-live-chs-apichgovuk-private-1586566722.eu-west-2.elb.amazonaws.com
            Address: 10.55.1.151
            Name:   internal-live-chs-apichgovuk-private-1586566722.eu-west-2.elb.amazonaws.com
            Address: 10.55.129.42
            Name:   internal-live-chs-apichgovuk-private-1586566722.eu-west-2.elb.amazonaws.com
            Address: 10.55.65.46



    It tries to use the DNS of my wifi router:
        192.168.1.1

    while it should AUTOMATICALLY pick up the corporate's one  (eg. 172.16.7.7)


    A workaround is to add it Manually to

            System Pre > Network > Advanced > DNS


------------

    Useful commands to troubleshoot (seeing the sequence of DNS)     scutil  is a Mac system-config-util. It opens an interactive session with configd

    ╰─ scutil
                > list ".*DNS"                                                     <----- command 1
                  subKey [0] = State:/Network/Global/DNS
                  subKey [1] = State:/Network/MulticastDNS
                  subKey [2] = State:/Network/PrivateDNS
                  subKey [3] = State:/Network/Service/1FA46E9B-6DF5-44F9-AE6B-2936F7A24394/DNS
                  subKey [4] = State:/Network/Service/com.cisco.anyconnect/DNS
                >  get State:/Network/Global/DNS                                   <----- command 2
                > d.show                                                           <----- command 3
                <dictionary> {
                  ServerAddresses : <array> {
                    0 : 192.168.1.1
                  }
                }
                > quit

    While after the manual add of the DNS 172.16.7.7:

    ╰─ scutil
                > list ".*DNS"
                  subKey [0] = Setup:/Network/Service/1FA46E9B-6DF5-44F9-AE6B-2936F7A24394/DNS
                  subKey [1] = State:/Network/Global/DNS
                  subKey [2] = State:/Network/MulticastDNS
                  subKey [3] = State:/Network/PrivateDNS
                  subKey [4] = State:/Network/Service/1FA46E9B-6DF5-44F9-AE6B-2936F7A24394/DNS
                  subKey [5] = State:/Network/Service/com.cisco.anyconnect/DNS
                > get State:/Network/Global/DNS
                > d.show
                <dictionary> {
                  ServerAddresses : <array> {
                    0 : 172.16.7.7
                  }
                }
                >




-------------------------------
     DNS
-------------------------------
sometimes on a Mac there are errors of hostname resolutions:
ex:

   ssh: Could not resolve hostname chl-prod-bep4.ch.gov.uk: nodename nor servname provided, or not known

fix:
    sudo killall -HUP mDNSResponder
-------------------------------
     DNS
-------------------------------

      DNS :   Domain Name System      ("It's the phone book of the Web")


      DOMAIN NAME: ___________________________
                                              \
                                               \
          ex:                               |----------------------|
          wiki.mediatemple.net                xxxxx . yyyyy . zzzzz
                                                            ^_________________ the dot '.' is the domain labels SEPARATOR
                                                                ^_____________ the rightmost is the TOP-level domain (TLD) (here zzzzz)
                                                        ^_____________________ each is a SUB-DOMAIN of the previous
                                                                               (xxxxx SUB-D of yyyyy
                                                                                yyyyy SUB-D of zzzzz)
                                              __3___  __2__   __1__            max num of domains is 127
                                              ______  _____   _____            each domain-label-LEN <  63  chars
                                            >_____________________<            anyhow total LEN      < 255  chars

                                                                               Each domain has 1 or +  authoritative DNS servers

                                                                               An authoritative DNS servers publishes info
                                                                               about that domain

                                                                               Root nameservers: the authoritative servers
                                                                               to query when looking up (resolving) a
                                                                               TOP-level domain name (TLD)


      HOST NAME  = [DOMAIN NAME] with 1 or more associated [IP addresses]



      DNS PROPAGATION           refers to the time for any DNS changes to transmit across the Internet.
                                1 DNS changes can take up to 24-48 hours to fully propagate.


      RECORDS :


       "A" Record              "Address record":
                               gives the IP address of a domain.
                               It maps a hostname to a 32-bit IPv4 address.
                               users that try to go to www.example.com will get the right IP address.

                               It takes this format (example):

                                        Name             TTL     TYPE    DATA
                                        ftp.domain.com   43200   A       IP Address
                               or:

                                        Name             TTL     TYPE    DATA
                                        *.domain.com     43200   A       10.0.2.2

                               The '*' allows to match multiple domain names having the same IP
                               This way, if someone mistakenly types subdomains of domain.com
                               he will still get domain.com



      MX Record:               "Mail Exchange Record":
                                       maps      [Domain name] <-- --> to a list of mail exchange servers.
                               A zone can have 1 or + (MX) records  (each MX Rec defined with a different priority -
                               If mail can't be delivered using the highest priority record, the second priority record is used,
                               and so on.)
                               These records point to hosts that accept mail messages on behalf of the host.
                               A host can be a 'MX' for itself.
                               MX records need to not point to a host in the same zone.
                               A 'MX' record takes this format:

                                         host.domain.name       IN     MX      10 otherhost.domain.name.
                                                                IN     MX      20 otherhost2.domain.name.

                              'MX' : preference numbers (0 - 65535) to assign who is selected first
                              (lower numbers: higher priority)




      PTR Record:             "Pointer Record":
                                       maps      [IPv4 addr.] <-- --> to the canonical name for that host
                              It implements reverse DNS lookup for that address.
                              For example, www.icann.net has the IP address 192.0.34.164,
                              but a PTR record maps 164.34.0.192.in-addr.arpa to its canonical name.



      NS Record               "Name Server Record"
                                       maps      [Domain name.] <-- --> to a list of DNS servers authoritative for that domain

                                       ex:
                                          ns1.mediatemple.net
                                          ns2.mediatemple.net



      SOA Record              "Start of Authority Record"
                              Specifies the DNS server providing information about
                                         an Internet domain,
                                         the email of the domain administrator,
                                         the domain serial number,
                                         several timers relating to refreshing the zone.



      TXT Record              TXT Record allows an admin to insert arbitrary text
                              into a DNS record.
                              ex:
                              "this record is used to implement the Sender Policy Framework and DomainKeys specifications."





Each DOMAIN NAME has a DNS ZONE that links it to DNS servers

                                   xxxxxxx.yyyyyyy.com        <------ called "DOMAIN NAME"     (improperly called hostname    [ actually the 'hosts' can be more than 1 for 1 DOMAIN NAME
                                                                                                               or URL         [a URL is longer: a DOMAIN NAME + other parts (endpoints, params, ...)]
DNS lookup or
DNS resolution process        NAME -----> IP

                        steps are:
                                     . in cache ?
                                       Y: good, take it
                                                                     caches are:
                                                                                 local plain text file 'hosts'
                                                                                 browser cache
                                                                                 internet service provider (ISP) cache

                                     . N: send a "DNS request" to a network of 4 DNS servers:

                                      |   1. DNS resolver or
                so the only CACHE     |      recursive resolver   : it's the 1st server to be contacted.
                is here ------------> |                             It forwards the request down the line ( --> Root Nameserver) and then it will
                                      |                             be the one to send back the answer
                                      |                             If there is an entry in its CACHE --> return directly
                                      |
                                      |   2. Root Nameserver:
                                      |                             it only gives to the DNS resolver the top-level domain (TLD) server to contact
                                      |                             (ex. .com)
                                      |
                                      |   3. top-level domain (TLD)   they are the servers for each top domain:
                                      |                               ex.  .com, .org, .online, and .net
                                      |
                                      |   4. Authoritative Nameserver or
                                      |      authoritative DNS server        is the final authority in the DNS resolution process.
                                                                   It stores all information including the IP address.

